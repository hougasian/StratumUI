/// Grid
// Set grid specific extends
%grid-defaults {
  min-height: 1px;
  position: relative;
  @include transition(all, 0.3s);
}

// Generate columns based on grid size ($columns)
@for $i from $columns through 1 {
  .col-#{$i} {
    width: #{(100% / $columns) * $i};
  }
}

// Float all cols left
[class*='col-'] {
  position: relative;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  float: left;
  overflow: hidden;
}

// Generate containers
@each $breakpoint in map-values($breakpoints) {
  @media (min-width: #{$breakpoint}) {
    .container {
      @include transition(all, 0.3s);
      width: #{$breakpoint - $gutter};
    }
  }
}

// Clear containers
.container,
.container-fluid {
  &:after {
    @extend %clearfix;
  }
}

// Set up gutters
*,
*:before,
*:after {
  @include box-sizing(border-box);
}

// Pad gutters
[class*='col-'] {
  padding-right: $gutter / 2;
  .container &:last-of-type {
    padding-right: 0;
  }
}

// Set block level display
div {
  display: block;
}

.container,
.container-fluid {
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  margin-left: auto;
  margin-right: auto;
  @extend %clearfix;
}

// Compensate for container padding to align text
.row {
  margin-left: -#{$gutter / 2};
  margin-right: -#{$gutter / 2};
  @extend %clearfix;
}

// Set width to 100% below breakpoint; initial values below.
// phablet:     765px
// tablet:      991px
@media (max-width: break-target(tablet)) {
  [class*='col-'] {
    width: 100%;
  }
}
